# Author José Luis Fernández Aguilera
require 'json'

file = File.read(ENV['deploy_file'])
data_hash = JSON.parse(file)

result = []
num_agents = data_hash['agents']['instances']
agent_initial_id = data_hash['agents']['initial_id']
agent_hostname_prefix = data_hash['agents']['hostname_prefix']
agent_box = data_hash['agents']['box']
agent_memory = data_hash['agents']['memory']
agent_cpus = data_hash['agents']['cpus']
agent_target = data_hash['agents']['target']

# Boxes config
num_managers = data_hash['managers']['instances']
manager_box = data_hash['managers']['box']
manager_hostname_prefix = data_hash['managers']['hostname_prefix']
manager_initial_id = data_hash['managers']['initial_id']
manager_memory = data_hash['managers']['memory']
manager_cpus = data_hash['managers']['cpus']
manager_target = data_hash['managers']['target']

# Generic
ip_range = data_hash['common']['ip_range']
provider = data_hash['common']['provider']


Vagrant.configure("2") do |config|
  config.ssh.private_key_path = "~/.vagrant.d/insecure_private_key"
  config.ssh.insert_key = false
  config.ssh.username = "vagrant"


  # Agents loop instance
  (agent_initial_id..num_agents+agent_initial_id-1).each do |i|
    hostname = agent_hostname_prefix + i.to_s
    config.vm.define hostname do |node| 
      config.vm.provider provider do |v|
        v.name = hostname
        v.memory = agent_memory
        v.cpus = agent_cpus
      end
      node.vm.box = agent_box
      node.vm.network :private_network, :ip => ip_range + i.to_s
    end
    result.push({
      :ID => i,
      :IP => ip_range + i.to_s,
      :hostname => agent_hostname_prefix,
      :target => agent_target    
    })
  end


  # Manager instance
  (manager_initial_id..num_managers+manager_initial_id-1).each do |i|
    hostname = manager_hostname_prefix + i.to_s
    config.vm.define hostname do |node| 
      config.vm.provider provider do |v|
	      v.name = hostname
        v.memory = manager_memory
        v.cpus = manager_cpus
      end
      node.vm.box = manager_box
      node.vm.network :private_network, :ip => ip_range + i.to_s
    end
    result.push({
      :ID => i,
      :IP => ip_range + i.to_s,
      :hostname => manager_hostname_prefix,   
      :target => manager_target
      })
  end
  File.open("result.json", "wb") { |file| file.puts result.to_json }

end
